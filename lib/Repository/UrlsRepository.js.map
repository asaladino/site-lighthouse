{"version":3,"sources":["../../src/Repository/UrlsRepository.js"],"names":["fs","require","Url","Args","Option","path","UrlsRepository","constructor","option","args","findForRange","urlsFile","join","output","filename","getSiteName","startUrl","endUrl","hasOwnProperty","a11y","pa11yLogin","JSON","parse","readFileSync","toString","slice","map","entry","findAll","module","exports"],"mappings":"AAAA,KAAMA,CAAAA,EAAE,CAAGC,OAAO,CAAC,IAAD,CAAlB,CACA,KAAMC,CAAAA,GAAG,CAAGD,OAAO,CAAC,cAAD,CAAnB,CACA,KAAME,CAAAA,IAAI,CAAGF,OAAO,CAAC,eAAD,CAApB,CACA,KAAMG,CAAAA,MAAM,CAAGH,OAAO,CAAC,iBAAD,CAAtB,CACA,KAAMI,CAAAA,IAAI,CAAGJ,OAAO,CAAC,MAAD,CAApB,CAEA,KAAMK,CAAAA,cAAe,CACjB;;;OAIAC,WAAW,CAACC,MAAD,CAASC,IAAT,CAAe,CACtB,KAAKD,MAAL,CAAcA,MAAd,CACA,KAAKC,IAAL,CAAYA,IACf,CAED;;;OAIAC,YAAY,EAAG,CACX,GAAIC,CAAAA,QAAQ,CAAGN,IAAI,CAACO,IAAL,CAAU,KAAKH,IAAL,CAAUI,MAAV,CAAiBC,QAA3B,CAAqC,KAAKL,IAAL,CAAUM,WAAV,EAArC,CAA8D,MAA9D,CAAsE,WAAtE,CAAf,CACA,GAAIC,CAAAA,QAAQ,CAAG,CAAf,CACA,GAAIC,CAAAA,MAAM,CAAG,CAAC,CAAd,CACA,GAAG,KAAKT,MAAL,CAAYU,cAAZ,CAA2B,MAA3B,GAAsC,KAAKV,MAAL,CAAYW,IAAZ,CAAiBD,cAAjB,CAAgC,YAAhC,CAAzC,CAAwF,CACpF,GAAG,KAAKV,MAAL,CAAYW,IAAZ,CAAiBC,UAAjB,CAA4BF,cAA5B,CAA2C,UAA3C,CAAH,CAA2D,CACvDF,QAAQ,CAAG,KAAKR,MAAL,CAAYW,IAAZ,CAAiBC,UAAjB,CAA4BJ,QAC1C,CACD,GAAG,KAAKR,MAAL,CAAYW,IAAZ,CAAiBC,UAAjB,CAA4BF,cAA5B,CAA2C,QAA3C,CAAH,CAAyD,CACrDD,MAAM,CAAG,KAAKT,MAAL,CAAYW,IAAZ,CAAiBC,UAAjB,CAA4BH,MACxC,CACJ,CACD,MAAOI,CAAAA,IAAI,CAACC,KAAL,CAAWtB,EAAE,CAACuB,YAAH,CAAgBZ,QAAhB,EAA0Ba,QAA1B,EAAX,EACFC,KADE,CACIT,QADJ,CACcC,MADd,EAEFS,GAFE,CAEEC,KAAK,EAAI,GAAIzB,CAAAA,GAAJ,CAAQyB,KAAR,CAFX,CAGV,CAEDC,OAAO,EAAG,CACN,GAAIjB,CAAAA,QAAQ,CAAGN,IAAI,CAACO,IAAL,CAAU,KAAKH,IAAL,CAAUI,MAAV,CAAiBC,QAA3B,CAAqC,KAAKL,IAAL,CAAUM,WAAV,EAArC,CAA8D,MAA9D,CAAsE,WAAtE,CAAf,CACA,MAAOM,CAAAA,IAAI,CAACC,KAAL,CAAWtB,EAAE,CAACuB,YAAH,CAAgBZ,QAAhB,EAA0Ba,QAA1B,EAAX,EACFE,GADE,CACEC,KAAK,EAAI,GAAIzB,CAAAA,GAAJ,CAAQyB,KAAR,CADX,CAEV,CAnCgB,CAsCrBE,MAAM,CAACC,OAAP,CAAiBxB,cAAjB","sourcesContent":["const fs = require('fs');\nconst Url = require('../Model/Url');\nconst Args = require('../Model/Args');\nconst Option = require('../Model/Option');\nconst path = require(\"path\");\n\nclass UrlsRepository {\n    /**\n     * @param option {Option}\n     * @param args {Args}\n     */\n    constructor(option, args) {\n        this.option = option;\n        this.args = args;\n    }\n\n    /**\n     * Find urls for range specified in the Pa11yLogin\n     * @returns {[Url]}\n     */\n    findForRange() {\n        let urlsFile = path.join(this.args.output.filename, this.args.getSiteName(), 'urls', 'urls.json');\n        let startUrl = 0;\n        let endUrl = -1;\n        if(this.option.hasOwnProperty('a11y') && this.option.a11y.hasOwnProperty('pa11yLogin')) {\n            if(this.option.a11y.pa11yLogin.hasOwnProperty('startUrl')) {\n                startUrl = this.option.a11y.pa11yLogin.startUrl;\n            }\n            if(this.option.a11y.pa11yLogin.hasOwnProperty('endUrl')) {\n                endUrl = this.option.a11y.pa11yLogin.endUrl;\n            }\n        }\n        return JSON.parse(fs.readFileSync(urlsFile).toString())\n            .slice(startUrl, endUrl)\n            .map(entry => new Url(entry));\n    }\n\n    findAll() {\n        let urlsFile = path.join(this.args.output.filename, this.args.getSiteName(), 'urls', 'urls.json');\n        return JSON.parse(fs.readFileSync(urlsFile).toString())\n            .map(entry => new Url(entry));\n    }\n}\n\nmodule.exports = UrlsRepository;"],"file":"UrlsRepository.js"}