{"version":3,"sources":["../../src/Repository/OptionsRepository.js"],"names":["OptionsRepository","constructor","args","getOption","option","optionsFile","path","join","output","filename","getSiteName","Option","JSON","parse","fs","readFileSync","toString"],"mappings":";;;;;;;AACA;;AACA;;AACA;;AACA;;;;AAEe,MAAMA,iBAAN,CAAwB;AAKnCC,EAAAA,WAAW,CAACC,IAAD,EAAa;AACpB,SAAKA,IAAL,GAAYA,IAAZ;AACH;;AAEDC,EAAAA,SAAS,GAAW;AAChB,QAAI,CAAC,KAAKC,MAAV,EAAkB;AACd,UAAIC,WAAW,GAAGC,cAAKC,IAAL,CAAU,KAAKL,IAAL,CAAUM,MAAV,CAAiBC,QAA3B,EAAqC,SAArC,EAAgD,KAAKP,IAAL,CAAUQ,WAAV,KAA0B,OAA1E,CAAlB;;AACA,WAAKN,MAAL,GAAc,IAAIO,eAAJ,CAAWC,IAAI,CAACC,KAAL,CAAWC,YAAGC,YAAH,CAAgBV,WAAhB,EAA6BW,QAA7B,EAAX,CAAX,CAAd;AACH;;AACD,WAAO,KAAKZ,MAAZ;AACH;;AAfkC","sourcesContent":["// @flow\nimport fs from \"fs\";\nimport path from \"path\";\nimport Option from \"../Model/Option\";\nimport Args from \"../Model/Args\";\n\nexport default class OptionsRepository {\n\n    args: Args;\n    option: ?Option;\n\n    constructor(args: Args) {\n        this.args = args;\n    }\n\n    getOption(): Option {\n        if (!this.option) {\n            let optionsFile = path.join(this.args.output.filename, 'options', this.args.getSiteName() + '.json');\n            this.option = new Option(JSON.parse(fs.readFileSync(optionsFile).toString()));\n        }\n        return this.option;\n    }\n}\n"],"file":"OptionsRepository.js"}