{"version":3,"sources":["../../src/Controller/LighthouseController.js"],"names":["LighthouseService","require","LighthouseController","constructor","args","logger","start","Promise","resolve","reject","output","doesFolderExist","lighthouseService","on","progress","report","toLog","verbose","console","log","toString","then","module","exports"],"mappings":"AAAA,KAAMA,CAAAA,iBAAiB,CAAGC,OAAO,CAAC,8BAAD,CAAjC,CAEA,KAAMC,CAAAA,oBAAqB,CAEvBC,WAAW,CAACC,IAAD,CAAO,CACd,KAAKA,IAAL,CAAYA,IAAZ,CACA,KAAKC,MAAL,CAAc,IAAKJ,OAAO,CAAC,mBAAD,CAAZ,EAAmCG,IAAnC,CACjB,CAEDE,KAAK,EAAG,CACJ,MAAO,IAAIC,CAAAA,OAAJ,CAAY,CAACC,OAAD,CAAUC,MAAV,GAAqB,CACpC,KAAKL,IAAL,CAAUM,MAAV,CAAiBC,eAAjB,GACA,KAAMC,CAAAA,iBAAiB,CAAG,GAAIZ,CAAAA,iBAAJ,CAAsB,KAAKI,IAA3B,CAA1B,CACAQ,iBAAiB,CAACC,EAAlB,CAAqB,OAArB,CAA8BC,QAAQ,EAAI,CACtC,KAAKT,MAAL,CAAYU,MAAZ,CAAmBD,QAAQ,CAACE,KAAT,EAAnB,EACA,GAAI,KAAKZ,IAAL,CAAUa,OAAd,CAAuB,CACnBC,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACM,QAAT,EAAZ,CACH,CACJ,CALD,EAKGP,EALH,CAKM,UALN,CAKkBC,QAAQ,EAAI,CAC1B,KAAKT,MAAL,CAAYU,MAAZ,CAAmBD,QAAQ,CAACE,KAAT,EAAnB,EACA,GAAI,KAAKZ,IAAL,CAAUa,OAAd,CAAuB,CACnBC,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACM,QAAT,EAAZ,CACH,CACJ,CAVD,EAUGP,EAVH,CAUM,UAVN,CAUkBC,QAAQ,EAAI,CAC1B,KAAKT,MAAL,CAAYU,MAAZ,CAAmBD,QAAQ,CAACE,KAAT,EAAnB,EACAE,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACM,QAAT,EAAZ,EACAZ,OAAO,EACV,CAdD,EAeAI,iBAAiB,CAACN,KAAlB,GAA0Be,IAA1B,EACH,CAnBM,CAoBV,CA5BsB,CA+B3BC,MAAM,CAACC,OAAP,CAAiBrB,oBAAjB","sourcesContent":["const LighthouseService = require('../Service/LighthouseService');\n\nclass LighthouseController {\n\n    constructor(args) {\n        this.args = args;\n        this.logger = new (require('../Utility/Logger'))(args);\n    }\n\n    start() {\n        return new Promise((resolve, reject) => {\n            this.args.output.doesFolderExist();\n            const lighthouseService = new LighthouseService(this.args);\n            lighthouseService.on('start', progress => {\n                this.logger.report(progress.toLog());\n                if (this.args.verbose) {\n                    console.log(progress.toString());\n                }\n            }).on('progress', progress => {\n                this.logger.report(progress.toLog());\n                if (this.args.verbose) {\n                    console.log(progress.toString());\n                }\n            }).on('complete', progress => {\n                this.logger.report(progress.toLog());\n                console.log(progress.toString());\n                resolve();\n            });\n            lighthouseService.start().then();\n        });\n    }\n}\n\nmodule.exports = LighthouseController;"],"file":"LighthouseController.js"}