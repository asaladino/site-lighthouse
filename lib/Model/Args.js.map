{"version":3,"sources":["../../src/Model/Args.js"],"names":["FileDetails","require","path","fs","Args","constructor","params","output","domain","verbose","Object","assign","shouldShowHelp","hasOwnProperty","getSiteName","replace","getProjectPath","siteName","projectPath","join","filename","existsSync","mkdirSync","module","exports"],"mappings":"AAAA,KAAMA,CAAAA,WAAW,CAAGC,OAAO,CAAC,eAAD,CAA3B,CACA,KAAMC,CAAAA,IAAI,CAAGD,OAAO,CAAC,MAAD,CAApB,CACA,KAAME,CAAAA,EAAE,CAAGF,OAAO,CAAC,IAAD,CAAlB,CAEA;;GAGA,KAAMG,CAAAA,IAAK,CACPC,WAAW,CAACC,MAAD,CAAS,CAChB;;;WAIA,KAAKC,MAAL,CAAc,IAAd,CACA;;;WAIA,KAAKC,MAAL,CAAc,IAAd,CACA;;;WAIA,KAAKC,OAAL,CAAe,IAAf,CACAC,MAAM,CAACC,MAAP,CAAc,IAAd,CAAoBL,MAApB,CACH,CAED;;;OAIAM,cAAc,EAAG,CACb,MAAO,MAAKC,cAAL,CAAoB,MAApB,GAAgC,KAAKL,MAAL,GAAgB,IAAhB,EAAwB,KAAKD,MAAL,GAAgB,IAClF,CAED;;;OAIAO,WAAW,EAAG,CACV,MAAO,MAAKN,MAAL,CAAYO,OAAZ,CAAoB,MAApB,CAA4B,GAA5B,CACV,CAED;;;OAIAC,cAAc,EAAG,CACb,GAAIC,CAAAA,QAAQ,CAAG,KAAKH,WAAL,EAAf,CACA,GAAII,CAAAA,WAAW,CAAGhB,IAAI,CAACiB,IAAL,CAAU,KAAKZ,MAAL,CAAYa,QAAtB,CAAgCH,QAAhC,CAAlB,CACA,GAAI,CAACd,EAAE,CAACkB,UAAH,CAAcH,WAAd,CAAL,CAAiC,CAC7Bf,EAAE,CAACmB,SAAH,CAAaJ,WAAb,CACH,CACD,MAAOA,CAAAA,WACV,CA/CM,CAkDXK,MAAM,CAACC,OAAP,CAAiBpB,IAAjB","sourcesContent":["const FileDetails = require('./FileDetails');\nconst path = require(\"path\");\nconst fs = require(\"fs\");\n\n/**\n * Commandline arguments being passed to the app.\n */\nclass Args {\n    constructor(params) {\n        /**\n         * Project directory to output the app results.\n         * @type {FileDetails|null}\n         */\n        this.output = null;\n        /**\n         * Domain being indexed.\n         * @type {string|*}\n         */\n        this.domain = null;\n        /**\n         * Should progress information be output to the console?\n         * @type {boolean}\n         */\n        this.verbose = true;\n        Object.assign(this, params);\n    }\n\n    /**\n     * If the mandatory options are not passed then show the menu.\n     * @returns {boolean} true if the mandatory options are not passed.\n     */\n    shouldShowHelp() {\n        return this.hasOwnProperty('help') || (this.domain === null || this.output === null);\n    }\n\n    /**\n     * Get the site name from the domain.\n     * @returns {string} the site name.\n     */\n    getSiteName() {\n        return this.domain.replace(/[.]/g, '_');\n    }\n\n    /**\n     * Get the project folder which the output + the site name. Also, it will be created if it doesn't exist.\n     * @returns {string} the project path.\n     */\n    getProjectPath() {\n        let siteName = this.getSiteName();\n        let projectPath = path.join(this.output.filename, siteName);\n        if (!fs.existsSync(projectPath)) {\n            fs.mkdirSync(projectPath);\n        }\n        return projectPath;\n    }\n}\n\nmodule.exports = Args;"],"file":"Args.js"}